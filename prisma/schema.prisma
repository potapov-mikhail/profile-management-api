// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  role      String
  status    String
  createdAt DateTime  @default(now())
  createdBy Int?
  updatedAt DateTime  @updatedAt
  updatedBy Int?
  deletedAt DateTime?
  deletedBy Int?

  groups UserGroup[]
  Group  Group[]
}

model Group {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  ownerId     Int
  createdAt   DateTime  @default(now())
  createdBy   Int?
  updatedAt   DateTime  @updatedAt
  updatedBy   Int?
  deletedAt   DateTime?
  deletedBy   Int?

  owner    User        @relation(fields: [ownerId], references: [id])
  users    UserGroup[]
  profiles Profile[]
}

model UserGroup {
  id      Int @id @default(autoincrement())
  userId  Int
  groupId Int

  user  User  @relation(fields: [userId], references: [id])
  group Group @relation(fields: [groupId], references: [id])

  @@unique([userId, groupId])
}

model Profile {
  id        Int       @id @default(autoincrement())
  name      String
  groupId   Int
  createdAt DateTime  @default(now())
  createdBy Int?
  updatedAt DateTime  @updatedAt
  updatedBy Int?
  deletedAt DateTime?
  deletedBy Int?

  group Group @relation(fields: [groupId], references: [id])
}
